<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_270472_abschluss_subject</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_270472_abschluss_subject">u_capacityCHANGESTO0^EQ<item endquery="false" field="u_capacity" goto="false" newquery="false" operator="CHANGESTO" or="false" value="0"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Allocate Student due to Course Capacity </name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var gr = new GlideRecord('x_270472_abschluss_participants_subject');
	gr.orderBy('u_priority');
	gr.addQuery('u_subject', current.sys_id);
	gr.query();
	gr.next();
	
	var studentToAllocate = gr.u_student.sys_id;
	gs.info("Studen_ID"+studentToAllocate);
	gr.deleteRecord();
	gr.update();
	var gr1 = new GlideRecord('x_270472_abschluss_elective_course');
	gr1.addQuery('u_student',studentToAllocate);
	gr1.query();
	gr1.next();
	
	var newSubjectChoice = gr1.u_fifth_choice;
	gs.info("Name " + newSubjectChoice.u_name);
	var studentExistsInSubject = new GlideRecord("x_270472_abschluss_participants_subject");
	studentExistsInSubject.addQuery('u_student',studentToAllocate);
	studentExistsInSubject.addQuery('u_subject',newSubjectChoice);
	studentExistsInSubject.query();
	studentExistsInSubject.next();
	
	if(newSubjectChoice.u_capacity > 0 && !studentExistsInSubject.hasNext()){
		var gr2 = new GlideRecord("x_270472_abschluss_participants_subject");
		gr2.initialize();
		gr2.setValue('u_student',studentToAllocate);
		gr2.setValue('u_subject', newSubjectChoice);
		gr2.setValue('u_priority', 1);
		gr2.insert();
		
		var pk = new GlideRecord('x_270472_abschluss_subject');
		pk.addQuery('u_name',gr1.u_fifth_choice.u_name);
		pk.query();
		pk.next();
		pk.u_capacity = pk.u_capacity-1;
		pk.update();
	}
	else{
		newSubjectChoice = gr1.u_sixth_choice;
		gs.info("Name " + newSubjectChoice.u_name);
		studentExistsInSubject = new GlideRecord("x_270472_abschluss_participants_subject");
		studentExistsInSubject.addQuery('u_student',studentToAllocate);
		studentExistsInSubject.addQuery('u_subject',newSubjectChoice);
		studentExistsInSubject.query();
		studentExistsInSubject.next();
		
		if(newSubjectChoice.u_capacity > 0 && !studentExistsInSubject.hasNext()){
			var gr3 = new GlideRecord("x_270472_abschluss_participants_subject");
			gr3.initialize();
			gr3.setValue('u_student',studentToAllocate);
			gr3.setValue('u_subject', newSubjectChoice);
			gr3.setValue('u_priority', 1);
			gr3.insert();
			
			var pk1 = new GlideRecord('x_270472_abschluss_subject');
			pk1.addQuery('u_name',gr1.u_sixth_choice.u_name);
			pk1.query();
			pk1.next();
			pk1.u_capacity = pk1.u_capacity-1;
			pk1.update();
		}
		else{
			newSubjectChoice = gr1.u_seventh_choice;
			gs.info("Name " + newSubjectChoice.u_name);
			studentExistsInSubject = new GlideRecord("x_270472_abschluss_participants_subject");
			studentExistsInSubject.addQuery('u_student',studentToAllocate);
			studentExistsInSubject.addQuery('u_subject',newSubjectChoice);
			studentExistsInSubject.query();
			studentExistsInSubject.next();
			
			if(newSubjectChoice.u_capacity > 0&&!studentExistsInSubject.hasNext()){
				var gr4 = new GlideRecord("x_270472_abschluss_participants_subject");
				gr4.initialize();
				gr4.setValue('u_student',studentToAllocate);
				gr4.setValue('u_subject', newSubjectChoice);
				gr4.setValue('u_priority', 1);
				gr4.insert();
				newSubjectChoice.u_capacity--;
				var pk2 = new GlideRecord('x_270472_abschluss_subject');
				pk2.addQuery('u_name',gr1.u_sixth_choice.u_name);
				pk2.query();
				pk2.next();
				pk2.u_capacity = pk2.u_capacity-1;
				pk2.update();
			}
		}
	}
	
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>christopher.kremkow</sys_created_by>
        <sys_created_on>2018-10-02 18:04:40</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>68ddf25f37f023006d33ded993990e69</sys_id>
        <sys_mod_count>50</sys_mod_count>
        <sys_name>Allocate Student due to Course Capacity </sys_name>
        <sys_overrides/>
        <sys_package display_value="Abschlussprojekt" source="x_270472_abschluss">513a4e71372023006d33ded993990e90</sys_package>
        <sys_policy/>
        <sys_scope display_value="Abschlussprojekt">513a4e71372023006d33ded993990e90</sys_scope>
        <sys_update_name>sys_script_68ddf25f37f023006d33ded993990e69</sys_update_name>
        <sys_updated_by>christopher.kremkow</sys_updated_by>
        <sys_updated_on>2018-10-02 21:39:56</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=68ddf25f37f023006d33ded993990e69"/>
</record_update>
